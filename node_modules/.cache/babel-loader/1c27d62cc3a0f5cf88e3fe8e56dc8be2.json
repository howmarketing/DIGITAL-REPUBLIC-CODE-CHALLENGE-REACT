{"ast":null,"code":"const gallon = 18;\nconst bigCan = 3.6;\nconst mediumCan = 2.5;\nconst smallCan = 0.5;\nlet gallons = 0;\nlet bigCans = 0;\nlet mediumCans = 0;\nlet smallCans = 0;\nlet rest;\nconst measureInkMeters = 5;\n\nconst InkCanCalculation = totalArea => {\n  const litersNeeded = totalArea / measureInkMeters; // if (totalArea >= gallon) {\n  //     gallons = parseInt( totalArea / gallon );\n  //     rest = totalArea % gallon;\n  //     bigCans = parseInt( rest / bigCan );\n  //     rest = rest % bigCan;\n  //     mediumCans = parseInt( rest / mediumCan );\n  //     rest = rest % mediumCan;\n  //     smallCans = Math.ceil(parseInt( rest / smallCan ));\n  //     return (gallons, bigCans, mediumCans, smallCans);\n  // } else if (totalArea >= bigCan) {\n  //     bigCans = parseInt( totalArea / bigCan );\n  //     rest = rest % bigCan;\n  //     mediumCans = parseInt( rest / mediumCan );\n  //     rest = rest % mediumCan;\n  //     smallCans = Math.ceil(parseInt( rest / smallCan ));\n  //     return (bigCans, mediumCans, smallCans);\n  // } else if (totalArea >= mediumCan) {\n  //     mediumCans = parseInt( totalArea / mediumCan );\n  //     rest = rest % mediumCan;\n  //     smallCans = Math.ceil(parseInt( rest / smallCan ));\n  //     return (mediumCans, smallCans);\n  // } else {\n  //     smallCans = Math.ceil(parseInt( totalArea / smallCan ));\n  //     return (smallCans);\n  // }\n};\n\n_c = InkCanCalculation;\nexport default InkCanCalculation;\n\nvar _c;\n\n$RefreshReg$(_c, \"InkCanCalculation\");","map":{"version":3,"sources":["/home/marcelofcd/Documentos/GitLab/Desafio Digital Republic/DIGITAL-REPUBLIC-CODE-CHALLENGE/ink-calculator/src/functions/inkCanCalcutation.js"],"names":["gallon","bigCan","mediumCan","smallCan","gallons","bigCans","mediumCans","smallCans","rest","measureInkMeters","InkCanCalculation","totalArea","litersNeeded"],"mappings":"AAAA,MAAMA,MAAM,GAAG,EAAf;AACA,MAAMC,MAAM,GAAG,GAAf;AACA,MAAMC,SAAS,GAAG,GAAlB;AACA,MAAMC,QAAQ,GAAG,GAAjB;AAEA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,IAAJ;AAEA,MAAMC,gBAAgB,GAAG,CAAzB;;AAEA,MAAMC,iBAAiB,GAAIC,SAAD,IAAe;AACrC,QAAMC,YAAY,GAAGD,SAAS,GAAGF,gBAAjC,CADqC,CAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA3BD;;KAAMC,iB;AA6BN,eAAeA,iBAAf","sourcesContent":["const gallon = 18;\nconst bigCan = 3.6;\nconst mediumCan = 2.5;\nconst smallCan = 0.5;\n\nlet gallons = 0;\nlet bigCans = 0;\nlet mediumCans = 0;\nlet smallCans = 0;\nlet rest;\n\nconst measureInkMeters = 5;\n\nconst InkCanCalculation = (totalArea) => {\n    const litersNeeded = totalArea / measureInkMeters;\n    // if (totalArea >= gallon) {\n    //     gallons = parseInt( totalArea / gallon );\n    //     rest = totalArea % gallon;\n    //     bigCans = parseInt( rest / bigCan );\n    //     rest = rest % bigCan;\n    //     mediumCans = parseInt( rest / mediumCan );\n    //     rest = rest % mediumCan;\n    //     smallCans = Math.ceil(parseInt( rest / smallCan ));\n    //     return (gallons, bigCans, mediumCans, smallCans);\n    // } else if (totalArea >= bigCan) {\n    //     bigCans = parseInt( totalArea / bigCan );\n    //     rest = rest % bigCan;\n    //     mediumCans = parseInt( rest / mediumCan );\n    //     rest = rest % mediumCan;\n    //     smallCans = Math.ceil(parseInt( rest / smallCan ));\n    //     return (bigCans, mediumCans, smallCans);\n    // } else if (totalArea >= mediumCan) {\n    //     mediumCans = parseInt( totalArea / mediumCan );\n    //     rest = rest % mediumCan;\n    //     smallCans = Math.ceil(parseInt( rest / smallCan ));\n    //     return (mediumCans, smallCans);\n    // } else {\n    //     smallCans = Math.ceil(parseInt( totalArea / smallCan ));\n    //     return (smallCans);\n    // }\n}\n\nexport default InkCanCalculation;"]},"metadata":{},"sourceType":"module"}