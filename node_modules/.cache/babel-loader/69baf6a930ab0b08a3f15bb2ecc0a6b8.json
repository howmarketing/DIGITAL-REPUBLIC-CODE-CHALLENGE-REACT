{"ast":null,"code":"const gallon = 18;\nconst bigCan = 3.6;\nconst mediumCan = 2.5;\nconst smallCan = 0.5;\nlet gallons = 0;\nlet bigCans = 0;\nlet mediumCans = 0;\nlet smallCans = 0;\nlet rest;\nconst measureInkMeters = 5;\n\nconst InkCanCalculation = totalArea => {\n  const litersNeeded = totalArea / measureInkMeters;\n\n  if (litersNeeded >= gallon) {\n    gallons = parseInt(litersNeeded / gallon);\n    rest = litersNeeded % gallon;\n    bigCans = parseInt(rest / bigCan);\n    rest = rest % bigCan;\n    mediumCans = parseInt(rest / mediumCan);\n    rest = rest % mediumCan;\n    smallCans = Math.ceil(parseInt(rest / smallCan));\n    console.log(gallons, bigCans, mediumCans, smallCans);\n    return gallons, bigCans, mediumCans, smallCans;\n  } else if (litersNeeded >= bigCan) {\n    bigCans = parseInt(litersNeeded / bigCan);\n    rest = rest % bigCan;\n    mediumCans = parseInt(rest / mediumCan);\n    rest = rest % mediumCan;\n    smallCans = Math.ceil(parseInt(rest / smallCan));\n    console.log(bigCans, mediumCans, smallCans);\n    return bigCans, mediumCans, smallCans;\n  } else if (litersNeeded >= mediumCan) {\n    mediumCans = parseInt(litersNeeded / mediumCan);\n    rest = rest % mediumCan;\n    smallCans = Math.ceil(parseInt(rest / smallCan));\n    console.log(mediumCans, smallCans);\n    return mediumCans, smallCans;\n  } else {\n    smallCans = Math.ceil(parseInt(litersNeeded / smallCan));\n    console.log(smallCans);\n    return smallCans;\n  }\n};\n\n_c = InkCanCalculation;\nexport default InkCanCalculation;\n\nvar _c;\n\n$RefreshReg$(_c, \"InkCanCalculation\");","map":{"version":3,"sources":["/home/marcelofcd/Documentos/GitLab/Desafio Digital Republic/DIGITAL-REPUBLIC-CODE-CHALLENGE/ink-calculator/src/functions/inkCanCalcutation.js"],"names":["gallon","bigCan","mediumCan","smallCan","gallons","bigCans","mediumCans","smallCans","rest","measureInkMeters","InkCanCalculation","totalArea","litersNeeded","parseInt","Math","ceil","console","log"],"mappings":"AAAA,MAAMA,MAAM,GAAG,EAAf;AACA,MAAMC,MAAM,GAAG,GAAf;AACA,MAAMC,SAAS,GAAG,GAAlB;AACA,MAAMC,QAAQ,GAAG,GAAjB;AAEA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,IAAJ;AAEA,MAAMC,gBAAgB,GAAG,CAAzB;;AAEA,MAAMC,iBAAiB,GAAIC,SAAD,IAAe;AACrC,QAAMC,YAAY,GAAGD,SAAS,GAAGF,gBAAjC;;AACA,MAAIG,YAAY,IAAIZ,MAApB,EAA4B;AACxBI,IAAAA,OAAO,GAAGS,QAAQ,CAAED,YAAY,GAAGZ,MAAjB,CAAlB;AACAQ,IAAAA,IAAI,GAAGI,YAAY,GAAGZ,MAAtB;AACAK,IAAAA,OAAO,GAAGQ,QAAQ,CAAEL,IAAI,GAAGP,MAAT,CAAlB;AACAO,IAAAA,IAAI,GAAGA,IAAI,GAAGP,MAAd;AACAK,IAAAA,UAAU,GAAGO,QAAQ,CAAEL,IAAI,GAAGN,SAAT,CAArB;AACAM,IAAAA,IAAI,GAAGA,IAAI,GAAGN,SAAd;AACAK,IAAAA,SAAS,GAAGO,IAAI,CAACC,IAAL,CAAUF,QAAQ,CAAEL,IAAI,GAAGL,QAAT,CAAlB,CAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ,EAAqBC,OAArB,EAA8BC,UAA9B,EAA0CC,SAA1C;AACA,WAAOH,OAAO,EAAEC,OAAF,EAAWC,UAAX,EAAuBC,SAArC;AAEH,GAXD,MAWO,IAAIK,YAAY,IAAIX,MAApB,EAA4B;AAC/BI,IAAAA,OAAO,GAAGQ,QAAQ,CAAED,YAAY,GAAGX,MAAjB,CAAlB;AACAO,IAAAA,IAAI,GAAGA,IAAI,GAAGP,MAAd;AACAK,IAAAA,UAAU,GAAGO,QAAQ,CAAEL,IAAI,GAAGN,SAAT,CAArB;AACAM,IAAAA,IAAI,GAAGA,IAAI,GAAGN,SAAd;AACAK,IAAAA,SAAS,GAAGO,IAAI,CAACC,IAAL,CAAUF,QAAQ,CAAEL,IAAI,GAAGL,QAAT,CAAlB,CAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ,EAAqBC,UAArB,EAAiCC,SAAjC;AACA,WAAOF,OAAO,EAAEC,UAAF,EAAcC,SAA5B;AAEH,GATM,MASA,IAAIK,YAAY,IAAIV,SAApB,EAA+B;AAClCI,IAAAA,UAAU,GAAGO,QAAQ,CAAED,YAAY,GAAGV,SAAjB,CAArB;AACAM,IAAAA,IAAI,GAAGA,IAAI,GAAGN,SAAd;AACAK,IAAAA,SAAS,GAAGO,IAAI,CAACC,IAAL,CAAUF,QAAQ,CAAEL,IAAI,GAAGL,QAAT,CAAlB,CAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ,EAAwBC,SAAxB;AACA,WAAOD,UAAU,EAAEC,SAAnB;AAEH,GAPM,MAOA;AACHA,IAAAA,SAAS,GAAGO,IAAI,CAACC,IAAL,CAAUF,QAAQ,CAAED,YAAY,GAAGT,QAAjB,CAAlB,CAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACA,WAAOA,SAAP;AACH;AACJ,CAlCD;;KAAMG,iB;AAoCN,eAAeA,iBAAf","sourcesContent":["const gallon = 18;\nconst bigCan = 3.6;\nconst mediumCan = 2.5;\nconst smallCan = 0.5;\n\nlet gallons = 0;\nlet bigCans = 0;\nlet mediumCans = 0;\nlet smallCans = 0;\nlet rest;\n\nconst measureInkMeters = 5;\n\nconst InkCanCalculation = (totalArea) => {\n    const litersNeeded = totalArea / measureInkMeters;\n    if (litersNeeded >= gallon) {\n        gallons = parseInt( litersNeeded / gallon );\n        rest = litersNeeded % gallon;\n        bigCans = parseInt( rest / bigCan );\n        rest = rest % bigCan;\n        mediumCans = parseInt( rest / mediumCan );\n        rest = rest % mediumCan;\n        smallCans = Math.ceil(parseInt( rest / smallCan ));\n        console.log(gallons, bigCans, mediumCans, smallCans);\n        return gallons, bigCans, mediumCans, smallCans;\n\n    } else if (litersNeeded >= bigCan) {\n        bigCans = parseInt( litersNeeded / bigCan );\n        rest = rest % bigCan;\n        mediumCans = parseInt( rest / mediumCan );\n        rest = rest % mediumCan;\n        smallCans = Math.ceil(parseInt( rest / smallCan ));\n        console.log(bigCans, mediumCans, smallCans);\n        return bigCans, mediumCans, smallCans;\n\n    } else if (litersNeeded >= mediumCan) {\n        mediumCans = parseInt( litersNeeded / mediumCan );\n        rest = rest % mediumCan;\n        smallCans = Math.ceil(parseInt( rest / smallCan ));\n        console.log(mediumCans, smallCans);\n        return mediumCans, smallCans;\n\n    } else {\n        smallCans = Math.ceil(parseInt( litersNeeded / smallCan ));\n        console.log(smallCans);\n        return smallCans;\n    }\n}\n\nexport default InkCanCalculation;"]},"metadata":{},"sourceType":"module"}